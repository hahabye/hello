name: Docker Build and Publish

on:
  # 手动触发工作流
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (eg: v1.0.0)'
        required: false
        default: ''
      branch:
        description: 'Branch to build'
        required: true
        default: 'main'
        type: choice
        options:
          - main
          - develop

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.event.inputs.branch == 'main' }}
            type=raw,value=dev,enable=${{ github.event.inputs.branch == 'develop' }}
            type=raw,value=${{ github.event.inputs.version }},enable=${{ github.event.inputs.version != '' }}
            type=raw,value=${{ github.event.inputs.branch }}
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Building messages
        run: |
          echo "=== Build Finished ==="
          echo "Branch: ${{ github.event.inputs.branch }}"
          echo "Version: ${{ github.event.inputs.version || 'default' }}"
          echo "Tags:
          ${{ steps.meta.outputs.tags }}"
          echo "Image Pushed to GitHub Container Registry"
          echo "Usage: docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
