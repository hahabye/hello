name: Build and Package
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # --------------------- 代码检出 ---------------------
      - name: Checkout code
        uses: actions/checkout@v4

      # --------------------- 环境准备 ---------------------
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      # --------------------- 并行构建 ---------------------
      - name: Build assets
        run: |
          cat > vite.css.config.js <<EOF
import { defineConfig } from 'vite';
export default defineConfig({
  build: {
      emptyOutDir: false,  // 保留构建产物
      rollupOptions: {
        input: ['./static/css/main.css'],
        output: {
              dir: 'dist',
              //inlineDynamicImports: false,
              assetFileNames: 'main.css'
          },
      },
  },
});
EOF
          cat > vite.js.config.js <<EOF
import { defineConfig } from 'vite';
export default defineConfig({
  build: {
    emptyOutDir: false,  // 保留构建产物
    rollupOptions: {
      input: [
        './static/js/jsq.js',    // JS 入口文件
      ],
      output: {
        //inlineDynamicImports: false,
        format: 'iife',          // 仅适用于 JS 文件
        dir: 'dist',             // 输出目录
        // 控制资源文件名（CSS 文件）
        entryFileNames: 'jsq.js'
      }
    }
  }
});
EOF
          npx vite build --config vite.js.config.js
          npx vite build --config vite.css.config.js

      # --------------------- 文件合并 ---------------------
      - name: Create combined JS
        run: |
          mkdir -p dist
          cat static/js/config.js dist/jsq.js > dist/all.js

      # --------------------- HTML 注入 ---------------------
      - name: Generate final HTML
        run: |
          # 读取资源内容
          CSS_CONTENT=$(cat dist/main.css)
          JS_CONTENT=$(cat dist/all.js)

          # 生成新 HTML（带智能转义）
          awk -v css="$CSS_CONTENT" -v js="$JS_CONTENT" '
            BEGIN {
              gsub(/\//, "\\/", css)  # 转义斜杠
              gsub(/\//, "\\/", js)
            }
            # 删除旧标签
            !/rel="stylesheet"/ && !/config\.js/ && !/jsq\.js/ {
              # 插入新标签
              if (/<\/head>/) print "<style>" css "</style>"
              if (/<\/body>/) print "<script>" js "</script>"
              print
            }
          ' index.html > dist/index.html

      # --------------------- 最终打包 ---------------------
      - name: Create release package
        run: |
          tar -czvf htm.tar.gz -C dist index.html
          ls -lh htm.tar.gz
